Senior Project Design Document for SPLALO

Objective
SPLALO is a computer based audio processing program capable of interpreting and transcribing live instruments as sheet music. In its final state, the program is intended to carry out real time audio processing for multiple instruments through multiple microphones. SPLALO also serves as a tool for learning how to interpret sheet music and its technical notation (that is, it teaches you how to read sheet music).

End Users
Instrument Player: This user will utilize SPLALO’s main functionality of converting some piece of music to a technical music sheet format. It is believed that this user will read the technical output and is presumed that such a user possesses the knowledge to interpret it. 

Student of Music Theory: This user is one that requests SPLALO’s assistance in interpreting sheet music. Typically such a user would possess limited knowledge on the matter however any user of the program may access this section.


Use Cases

Program user attempts to record some piece of music
	Actor: Instrument Player, SPLALO
	Precondition/Assumptions: 
	  A working microphone connected to host machine and used.
    Actor plays some harmonic instrument near microphone.
    Actor possesses adequate knowledge of music theory to interpret sheet music.
	Trigger Action(s): Program user sets timer.
  Program user presses record button.

	Workflow: 
	  Main actor connects microphone to host computer and places it near instrument of choice
	  Program user sets timer for how long SPLALO should record.
	  Program user clicks on record button
	  SPLALO displays countdown before recording starts
	  Instrument Player commences piece at the end of the countdown
	  SPLALO stops recording after preset time has elapsed and displays message
	  Functional Components: SPLALO’s UI for display, Java Sound Library/Beads Library for recording audio input.

Program analyzes audio input and displays sheet music
	Actor: SPLALO
	Preconditions/Assumptions: Program possesses necessary functions and runs as expected
	Trigger Action(s): Program user opens SPLALO and fulfills preconditions for recording.
	Workflow: 
    SPLALO partitions recorded sound into individual perceived notes/chords
		Program notes timing value.
		SPLALO performs Fourier Transforms on partitions for dominant frequencies.
		Program interprets note value from frequencies.
		SPLALO analyzes amplitude values for additional notation and notes them.
		Program analyzes collective timing values for tempo and time signature values.
		Program analyzes collective note values for key of piece
		Program accesses properties and writes notation in chronological order.
	
	Functional Components: 
    Fourier Transform Algorithm for frequency determination
    Beat Determination Algorithm for timing determination (yet to identify specific library for assistance).
	
	
Program user requests assistance to interpret sheet music
	Actors: Student of Music Theory, SPLALO
	Preconditions/Assumptions: User possesses little to no knowledge on music theory required for interpreting sheet music.
	Trigger Action(s): User clicks on “Help” button
	Workflow: SPLALO displays steps on interpreting sheet music notation
	Functional Components: SPLALO’s UI for display


Functional Requirements:

•	SPLALO should record and store audio input as a sound file on host machine for independent playback by user.
•	Program should be capable of accurately determining the note(s) being played at a particular point in time by analyzing the frequencies present at that portion of the sound wave.
•	Program should be capable of determining a note or chord’s timing value by interpreting how long it is “heard” for.
•	SPLALO must provide additional notation for dynamics based on amplitude values. For example, crescendo symbol to show increasing loudness with consecutive notes in a sequence.
•	SPLALO must determine the tempo and time signatures of the piece as a whole by comparing the timing values of individual notes and chords.
•	Program should interpret the key of the piece based on the note values perceived.
•	The program should accurately transcribe all of the properties interpreted in the previous requirements in the form of standard sheet music and display it to some user interface.
•	SPLALO should relay adequate information on how to decipher technical notation of sheet music upon request.

Non-functional Requirements:

•	Program must be able to analyze properties of notes and draw conclusions as quickly as possible (ideally within 2 seconds).
•	Program should run independent of host machine.
•	SPLALO must be as accurate as possible in all interpretations. Appropriate timing, frequency and amplitude values must be recognized for accurate interpretation and transcription.

